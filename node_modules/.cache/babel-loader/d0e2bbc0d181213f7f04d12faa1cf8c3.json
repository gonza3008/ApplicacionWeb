{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sitrack\\\\Desktop\\\\Proyecto final\\\\PaginaDEPruebas\\\\pagina_de_pruebas\\\\src\\\\components\\\\pures\\\\dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Button } from '@mui/material';\nimport Dashboard from '../../app/Appdashboard';\nimport { getDateFromApi } from '../../Services/axiosService';\n/**\r\n * El prp Variable es el nombre de la leyenda cuando pones el cursor sobre la grafica \r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowData(_ref) {\n  _s();\n\n  let {\n    Variable\n  } = _ref;\n  var timer;\n  const [date, setDate] = useState([]);\n  const [meditions, setMeditions] = useState([]);\n\n  const obtainDate = () => {\n    getDateFromApi().then(response => {\n      if (response.status === 200) {\n        //Si la respuesta esta ok, guardo la fecha en la variable date. \n        let tempDate = [];\n        let tempMeditions = [];\n        let tempResponse = response.data.medition;\n        tempResponse.forEach((element, index) => {\n          let temp = element.medition.toString();\n          let array = temp.split(',');\n          tempDate.push(array[2]);\n          setDate(tempDate);\n          tempMeditions.push(array[0]);\n          setMeditions(tempMeditions);\n        });\n      }\n    }).catch(error => alert(`An error has ocurred ${error}`));\n  };\n\n  useEffect(() => {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    timer = setInterval(obtainDate, 10000);\n    obtainDate(); //obtiene los datos una unica vez ni bien renderiza el componente. \n\n    return () => clearInterval(timer);\n  }, []);\n\n  const stopRefresh = () => {\n    clearInterval(timer);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Dashboard, {\n        onMouseOver: stopRefresh,\n        title: \"Tension bateria\",\n        subheader: \"Panel solar 500mA\",\n        leyend: Variable,\n        chartLabels: date,\n        chartData: [{\n          name: 'Team B',\n          type: 'area',\n          fill: 'gradient',\n          data: meditions\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      lg: 4,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: obtainDate,\n        variant: \"contained\",\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShowData, \"8up8uaCei6nZbTsYLSHjY0RV+tA=\");\n\n_c = ShowData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowData\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Button","Dashboard","getDateFromApi","ShowData","Variable","timer","date","setDate","meditions","setMeditions","obtainDate","then","response","status","tempDate","tempMeditions","tempResponse","data","medition","forEach","element","index","temp","toString","array","split","push","catch","error","alert","setInterval","clearInterval","stopRefresh","name","type","fill"],"sources":["C:/Users/Sitrack/Desktop/Proyecto final/PaginaDEPruebas/pagina_de_pruebas/src/components/pures/dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Grid, Button } from '@mui/material';\r\nimport Dashboard from '../../app/Appdashboard'\r\nimport { getDateFromApi } from '../../Services/axiosService';\r\n\r\n/**\r\n * El prp Variable es el nombre de la leyenda cuando pones el cursor sobre la grafica \r\n */\r\nexport default function ShowData({ Variable }) {\r\n\r\n    var timer;\r\n    const [date, setDate] = useState([]);\r\n    const [meditions, setMeditions] = useState([]);\r\n\r\n    const obtainDate = () => {\r\n        getDateFromApi()\r\n            .then((response) => {\r\n                if (response.status === 200) {//Si la respuesta esta ok, guardo la fecha en la variable date. \r\n\r\n                    let tempDate = [];\r\n                    let tempMeditions = [];\r\n                    let tempResponse = response.data.medition;\r\n\r\n                    tempResponse.forEach((element, index) => {\r\n                        let temp = element.medition.toString();\r\n                        let array = temp.split(',');\r\n                        tempDate.push(array[2]);\r\n                        setDate(tempDate);\r\n                        tempMeditions.push(array[0]);\r\n                        setMeditions(tempMeditions);\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => alert(`An error has ocurred ${error}`))\r\n    }\r\n\r\n    useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        timer = setInterval(obtainDate, 10000);\r\n        obtainDate(); //obtiene los datos una unica vez ni bien renderiza el componente. \r\n        return () => clearInterval(timer);\r\n    },[]);\r\n\r\n    const stopRefresh = ()=> {\r\n         clearInterval(timer);\r\n    }\r\n\r\n    return (\r\n\r\n        <div >\r\n            <div>\r\n            <Dashboard\r\n                onMouseOver={stopRefresh}\r\n                title=\"Tension bateria\"\r\n                subheader=\"Panel solar 500mA\"\r\n                leyend={Variable}\r\n                chartLabels={date}\r\n                chartData={[\r\n                    {\r\n                        name: 'Team B',\r\n                        type: 'area',\r\n                        fill: 'gradient',\r\n                        data: meditions\r\n                    },\r\n                ]}\r\n            />\r\n            </div>\r\n\r\n            <Grid item xs={12} md={6} lg={4}>\r\n                <Button onClick={obtainDate} variant=\"contained\">Refresh</Button>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,eAA7B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,cAAT,QAA+B,6BAA/B;AAEA;AACA;AACA;;;AACA,eAAe,SAASC,QAAT,OAAgC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAE3C,IAAIC,KAAJ;EACA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;;EAEA,MAAMa,UAAU,GAAG,MAAM;IACrBR,cAAc,GACTS,IADL,CACWC,QAAD,IAAc;MAChB,IAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;QAAC;QAE1B,IAAIC,QAAQ,GAAG,EAAf;QACA,IAAIC,aAAa,GAAG,EAApB;QACA,IAAIC,YAAY,GAAGJ,QAAQ,CAACK,IAAT,CAAcC,QAAjC;QAEAF,YAAY,CAACG,OAAb,CAAqB,CAACC,OAAD,EAAUC,KAAV,KAAoB;UACrC,IAAIC,IAAI,GAAGF,OAAO,CAACF,QAAR,CAAiBK,QAAjB,EAAX;UACA,IAAIC,KAAK,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,CAAZ;UACAX,QAAQ,CAACY,IAAT,CAAcF,KAAK,CAAC,CAAD,CAAnB;UACAjB,OAAO,CAACO,QAAD,CAAP;UACAC,aAAa,CAACW,IAAd,CAAmBF,KAAK,CAAC,CAAD,CAAxB;UACAf,YAAY,CAACM,aAAD,CAAZ;QACH,CAPD;MAQH;IACJ,CAjBL,EAkBKY,KAlBL,CAkBYC,KAAD,IAAWC,KAAK,CAAE,wBAAuBD,KAAM,EAA/B,CAlB3B;EAmBH,CApBD;;EAsBA9B,SAAS,CAAC,MAAM;IACZ;IACAO,KAAK,GAAGyB,WAAW,CAACpB,UAAD,EAAa,KAAb,CAAnB;IACAA,UAAU,GAHE,CAGE;;IACd,OAAO,MAAMqB,aAAa,CAAC1B,KAAD,CAA1B;EACH,CALQ,EAKP,EALO,CAAT;;EAOA,MAAM2B,WAAW,GAAG,MAAK;IACpBD,aAAa,CAAC1B,KAAD,CAAb;EACJ,CAFD;;EAIA,oBAEI;IAAA,wBACI;MAAA,uBACA,QAAC,SAAD;QACI,WAAW,EAAE2B,WADjB;QAEI,KAAK,EAAC,iBAFV;QAGI,SAAS,EAAC,mBAHd;QAII,MAAM,EAAE5B,QAJZ;QAKI,WAAW,EAAEE,IALjB;QAMI,SAAS,EAAE,CACP;UACI2B,IAAI,EAAE,QADV;UAEIC,IAAI,EAAE,MAFV;UAGIC,IAAI,EAAE,UAHV;UAIIlB,IAAI,EAAET;QAJV,CADO;MANf;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA,QADJ,eAmBI,QAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,EAAE,EAAf;MAAmB,EAAE,EAAE,CAAvB;MAA0B,EAAE,EAAE,CAA9B;MAAA,uBACI,QAAC,MAAD;QAAQ,OAAO,EAAEE,UAAjB;QAA6B,OAAO,EAAC,WAArC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAnBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AA2BH;;GAlEuBP,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}