{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ShowData from './dashboard';\nimport { getDateFromApi } from '../../Services/axiosService';\n\nconst DashboardRefresh = () => {\n  _s();\n\n  const [date, setDate] = useState([]);\n  const medition = [];\n\n  const obtainDate = () => {\n    getDateFromApi().then(response => {\n      if (response.status === 200) {\n        //Si la respuesta esta ok, guardo la fecha en la variable date. \n        const tempDate = [...date];\n        tempDate.push(response.data.toString());\n        medition.push(5);\n        setDate(tempDate);\n        console.log(date);\n      }\n    }).catch(error => alert(`An error has ocurred ${error}`));\n  };\n\n  useEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n};\n\n_s(DashboardRefresh, \"F/ALJWkGcoD4MT4WwgGwe4yAxME=\");\n\n_c = DashboardRefresh;\nexport default DashboardRefresh;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardRefresh\");","map":{"version":3,"names":["React","useEffect","useState","ShowData","getDateFromApi","DashboardRefresh","date","setDate","medition","obtainDate","then","response","status","tempDate","push","data","toString","console","log","catch","error","alert","effect","cleanup","input"],"sources":["C:/Users/Sitrack/Desktop/Proyecto final/PaginaDEPruebas/pagina_de_pruebas/src/components/containers/DashboardRefresh.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ShowData from './dashboard';\r\nimport { getDateFromApi } from '../../Services/axiosService';\r\n\r\n\r\n\r\nconst DashboardRefresh = () => {\r\n\r\n\r\n    const [date, setDate] = useState([]);\r\n    const medition = [];\r\n\r\n    const obtainDate = () => {\r\n\r\n        getDateFromApi()\r\n            .then((response) => {\r\n                if (response.status === 200) {//Si la respuesta esta ok, guardo la fecha en la variable date. \r\n                    const tempDate = [...date];\r\n                    tempDate.push(response.data.toString());\r\n                    medition.push(5);\r\n                    setDate(tempDate);\r\n                    console.log(date);\r\n                }\r\n            })\r\n            .catch((error) => alert(`An error has ocurred ${error}`))\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        effect\r\n        return () => {\r\n            cleanup\r\n        };\r\n    }, [input]);\r\n}\r\n\r\nexport default DashboardRefresh;\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,cAAT,QAA+B,6BAA/B;;AAIA,MAAMC,gBAAgB,GAAG,MAAM;EAAA;;EAG3B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAMM,QAAQ,GAAG,EAAjB;;EAEA,MAAMC,UAAU,GAAG,MAAM;IAErBL,cAAc,GACTM,IADL,CACWC,QAAD,IAAc;MAChB,IAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;QAAC;QAC1B,MAAMC,QAAQ,GAAG,CAAC,GAAGP,IAAJ,CAAjB;QACAO,QAAQ,CAACC,IAAT,CAAcH,QAAQ,CAACI,IAAT,CAAcC,QAAd,EAAd;QACAR,QAAQ,CAACM,IAAT,CAAc,CAAd;QACAP,OAAO,CAACM,QAAD,CAAP;QACAI,OAAO,CAACC,GAAR,CAAYZ,IAAZ;MACH;IACJ,CATL,EAUKa,KAVL,CAUYC,KAAD,IAAWC,KAAK,CAAE,wBAAuBD,KAAM,EAA/B,CAV3B;EAWH,CAbD;;EAiBAnB,SAAS,CAAC,MAAM;IACZqB,MAAM;IACN,OAAO,MAAM;MACTC,OAAO;IACV,CAFD;EAGH,CALQ,EAKN,CAACC,KAAD,CALM,CAAT;AAMH,CA7BD;;GAAMnB,gB;;KAAAA,gB;AA+BN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}